# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class AcmeForAppliances < Formula
  desc "ACME Support for appliances that don't natively support it"
  homepage "https://github.com/beryju/acme-for-appliances"
  version "1.1.4"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/BeryJu/acme-for-appliances/releases/download/v1.1.4/acme-for-appliances_darwin_amd64"
      sha256 "1ad33e16542b4f30d8f2c82e9231d4ce45035babde5a1d0c841e73db5d15db2d"

      def install
        bin.install "acme-for-appliances_darwin_amd64" => "acme-for-appliances"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/BeryJu/acme-for-appliances/releases/download/v1.1.4/acme-for-appliances_darwin_arm64"
      sha256 "289f109f9fed525932a0907e880b551bf91b6b171362f287b1dcfae543af3229"

      def install
        bin.install "acme-for-appliances_darwin_arm64" => "acme-for-appliances"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/BeryJu/acme-for-appliances/releases/download/v1.1.4/acme-for-appliances_linux_amd64"
      sha256 "1875abfbb886b93089bed9d51baaefe20e699efee445b5e9fd7225ca812ffe62"

      def install
        bin.install "acme-for-appliances_linux_amd64" => "acme-for-appliances"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/BeryJu/acme-for-appliances/releases/download/v1.1.4/acme-for-appliances_linux_arm"
      sha256 "a912aae6fd8318d1e2701cf11a8f6afaaf8131305bd6d1391d9352a2a3615555"

      def install
        bin.install "acme-for-appliances_linux_arm" => "acme-for-appliances"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/BeryJu/acme-for-appliances/releases/download/v1.1.4/acme-for-appliances_linux_arm64"
      sha256 "b00e89a51afacb2d2e2c17a3f0f781a2736d08b28b2c3d5c245e074b86c743f5"

      def install
        bin.install "acme-for-appliances_linux_arm64" => "acme-for-appliances"
      end
    end
  end
end
